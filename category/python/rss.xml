<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>苜蓿·莱 • Posts by &#34;python&#34; category</title>
        <link>https://sjxwjk.github.io</link>
        <description>编程&amp;有趣的事物</description>
        <language>zh-CN</language>
        <pubDate>Tue, 11 Jan 2022 13:57:33 +0800</pubDate>
        <lastBuildDate>Tue, 11 Jan 2022 13:57:33 +0800</lastBuildDate>
        <category>citespace</category>
        <category>搭建博客相关</category>
        <category>LeetCode</category>
        <category>面试</category>
        <category>常用</category>
        <category>程序设计语言</category>
        <category>python</category>
        <category>八阿哥</category>
        <category>测试</category>
        <item>
            <guid isPermalink="true">https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/</guid>
            <title>24点游戏（自动生成随机数）</title>
            <link>https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/</link>
            <category>python</category>
            <pubDate>Tue, 11 Jan 2022 13:57:33 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;常见游戏规则：&lt;br&gt;
从扑克中每次取出 4 张牌。使用加减乘除，第一个能得出 24 者为赢。（其中，J 代表 &amp;gt; 11，Q 代表 12，K 代表 13，A 代表 1），按照要求编程解决 24 点游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随机产生四个数字用 python 中的函数进行全排列&lt;br&gt;
随机数的生成：&lt;br&gt;
对于 python 随机数的生成，通过导入包来实现，即 import  random&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222143990.png&#34; alt&gt;&lt;br&gt;
 本程序中因为要生成 4 个（1——13）的整形数字，采用 randint&lt;br&gt;
 对四个随机数的全排列：&lt;br&gt;
对于 python 可以通过 python 的包 itertools 所以不用自己写递归函数实现&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;通俗地讲，就是返回可迭代对象的所有数学全排列方式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```listCardSet = list(set(itertools.permutations(listCardNum, 4)))#全排列4个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return  listCardSet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如：8,13,3,5 产生的全排列&lt;/p&gt;
&lt;p&gt;(8, 13, 3, 5), (13, 5, 8, 3), (5, 3, 8, 13), (13, 3, 8, 5), (3, 5, 8, 13), (3, 13, 5, 8),&lt;/p&gt;
&lt;p&gt;(3, 5, 13, 8), (5, 3, 13, 8), (8, 13, 5, 3), (8, 5, 13, 3), (8, 3, 5, 13), (5, 8, 3, 13),&lt;/p&gt;
&lt;p&gt;(13, 8, 3, 5), (13, 3, 5, 8), (8, 3, 13, 5), (5, 8, 13, 3), (3, 8, 13, 5), (5, 13, 3, 8),&lt;/p&gt;
&lt;p&gt;(13, 8, 5, 3), (5, 13, 8, 3), (8, 5, 3, 13), (3, 13, 8, 5), (3, 8, 5, 13), (13, 5, 3, 8)&lt;/p&gt;
&lt;p&gt;显示：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;__name__ &lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;************************欢迎进入24点游戏************************&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;该系统会随机产生四张牌，并帮助您算出可以实现24点的所有算法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222146226.png&#34; alt&gt;&lt;br&gt;
代码分析：&lt;br&gt;
I. 需要的包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;itertools&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;II. 随机产生数字和全排列：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;card_rand():&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(4):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list_random.append(random.randint(1, 13))                    #list.append(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list_quanpai = list(set(itertools.permutations(list_random, 4)))#全排列4个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return  list_quanpai&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listCard = card_rand()  # 排列组合结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(listCard)#输出所有排列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```III. 计算函数：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```def card_calculate():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(len(listCard)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list1_Card = listCard[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardOne = list1_Card[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardTwo = list1_Card[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardThree = list1_Card[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardFour = list1_Card[3]  # 得到四张牌的点数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag = False  # 标志位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for o1 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultOne = 0  # 前两个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if o1 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne+cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne-cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne*cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne/cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for o2 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultTwo = 0  # 前三个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    if o2 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne + cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne - cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne * cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne / cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    for o3 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultThree = 0  # 四个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultFinal = 0  # 最后两个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        if o3 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo + cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree + cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo - cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree - cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo * cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree * cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo / cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree / cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;源码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9xcV80MTIzMzY0My8xMTExMjAzMw==&#34;&gt;https://download.csdn.net/download/qq_41233643/11112033&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
