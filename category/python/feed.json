{
    "version": "https://jsonfeed.org/version/1",
    "title": "苜蓿·莱 • All posts by \"python\" category",
    "description": "编程&有趣的事物",
    "home_page_url": "https://sjxwjk.github.io",
    "items": [
        {
            "id": "https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/",
            "url": "https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/",
            "title": "24点游戏（自动生成随机数）",
            "date_published": "2022-01-11T05:57:33.962Z",
            "content_html": "<blockquote>\n<p>常见游戏规则：<br>\n从扑克中每次取出 4 张牌。使用加减乘除，第一个能得出 24 者为赢。（其中，J 代表 &gt; 11，Q 代表 12，K 代表 13，A 代表 1），按照要求编程解决 24 点游戏。</p>\n</blockquote>\n<p>随机产生四个数字用 python 中的函数进行全排列<br>\n随机数的生成：<br>\n对于 python 随机数的生成，通过导入包来实现，即 import  random<br>\n<img data-src=\"https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222143990.png\" alt><br>\n 本程序中因为要生成 4 个（1——13）的整形数字，采用 randint<br>\n 对四个随机数的全排列：<br>\n对于 python 可以通过 python 的包 itertools 所以不用自己写递归函数实现</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">通俗地讲，就是返回可迭代对象的所有数学全排列方式。</span><br><span class=\"line\">```listCardSet = list(set(itertools.permutations(listCardNum, 4)))#全排列4个数</span><br><span class=\"line\">return  listCardSet</span><br></pre></td></tr></table></figure>\n<p>例如：8,13,3,5 产生的全排列</p>\n<p>(8, 13, 3, 5), (13, 5, 8, 3), (5, 3, 8, 13), (13, 3, 8, 5), (3, 5, 8, 13), (3, 13, 5, 8),</p>\n<p>(3, 5, 13, 8), (5, 3, 13, 8), (8, 13, 5, 3), (8, 5, 13, 3), (8, 3, 5, 13), (5, 8, 3, 13),</p>\n<p>(13, 8, 3, 5), (13, 3, 5, 8), (8, 3, 13, 5), (5, 8, 13, 3), (3, 8, 13, 5), (5, 13, 3, 8),</p>\n<p>(13, 8, 5, 3), (5, 13, 8, 3), (8, 5, 3, 13), (3, 13, 8, 5), (3, 8, 5, 13), (13, 5, 3, 8)</p>\n<p>显示：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>__name__ </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;************************欢迎进入24点游戏************************&quot;)</span><br><span class=\"line\">print(&quot;该系统会随机产生四张牌，并帮助您算出可以实现24点的所有算法&quot;)</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222146226.png\" alt><br>\n代码分析：<br>\nI. 需要的包：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>itertools</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import random</span><br></pre></td></tr></table></figure>\n<p>II. 随机产生数字和全排列：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>card_rand():</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    for i in range(4):</span><br><span class=\"line\">        list_random.append(random.randint(1, 13))                    #list.append(obj)</span><br><span class=\"line\">    list_quanpai = list(set(itertools.permutations(list_random, 4)))#全排列4个数</span><br><span class=\"line\">    return  list_quanpai</span><br><span class=\"line\">listCard = card_rand()  # 排列组合结果</span><br><span class=\"line\">#print(listCard)#输出所有排列</span><br><span class=\"line\"></span><br><span class=\"line\">```III. 计算函数：</span><br><span class=\"line\"></span><br><span class=\"line\">```def card_calculate():</span><br><span class=\"line\">    for i in range(len(listCard)):</span><br><span class=\"line\">        list1_Card = listCard[i]</span><br><span class=\"line\"> </span><br><span class=\"line\">        cardOne = list1_Card[0]</span><br><span class=\"line\">        cardTwo = list1_Card[1]</span><br><span class=\"line\">        cardThree = list1_Card[2]</span><br><span class=\"line\">        cardFour = list1_Card[3]  # 得到四张牌的点数</span><br><span class=\"line\">        flag = False  # 标志位</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            for o1 in listOperator:</span><br><span class=\"line\">                resultOne = 0  # 前两个数的运算结果</span><br><span class=\"line\">                if o1 == &quot;+&quot;:</span><br><span class=\"line\">                    resultOne = cardOne+cardTwo</span><br><span class=\"line\">                elif o1 == &quot;-&quot;:</span><br><span class=\"line\">                    resultOne = cardOne-cardTwo</span><br><span class=\"line\">                elif o1 == &quot;*&quot;:</span><br><span class=\"line\">                    resultOne = cardOne*cardTwo</span><br><span class=\"line\">                elif o1 == &quot;/&quot;:</span><br><span class=\"line\">                    resultOne = cardOne/cardTwo</span><br><span class=\"line\">                for o2 in listOperator:</span><br><span class=\"line\">                    resultTwo = 0  # 前三个数的运算结果</span><br><span class=\"line\">                    if o2 == &quot;+&quot;:</span><br><span class=\"line\">                        resultTwo = resultOne + cardThree</span><br><span class=\"line\">                    elif o2 == &quot;-&quot;:</span><br><span class=\"line\">                        resultTwo = resultOne - cardThree</span><br><span class=\"line\">                    elif o2 == &quot;*&quot;:</span><br><span class=\"line\">                        resultTwo = resultOne * cardThree</span><br><span class=\"line\">                    elif o2 == &quot;/&quot;:</span><br><span class=\"line\">                        resultTwo = resultOne / cardThree</span><br><span class=\"line\">                    for o3 in listOperator:</span><br><span class=\"line\">                        resultThree = 0  # 四个数的运算结果</span><br><span class=\"line\">                        resultFinal = 0  # 最后两个数的运算结果</span><br><span class=\"line\">                        if o3 == &quot;+&quot;:</span><br><span class=\"line\">                            resultThree = resultTwo + cardFour</span><br><span class=\"line\">                            resultFinal = cardThree + cardFour</span><br><span class=\"line\">                        elif o3 == &quot;-&quot;:</span><br><span class=\"line\">                            resultThree = resultTwo - cardFour</span><br><span class=\"line\">                            resultFinal = cardThree - cardFour</span><br><span class=\"line\">                        elif o3 == &quot;*&quot;:</span><br><span class=\"line\">                            resultThree = resultTwo * cardFour</span><br><span class=\"line\">                            resultFinal = cardThree * cardFour</span><br><span class=\"line\">                        elif o3 == &quot;/&quot;:</span><br><span class=\"line\">                            resultThree = resultTwo / cardFour</span><br><span class=\"line\">                            resultFinal = cardThree / cardFour</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>源码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9xcV80MTIzMzY0My8xMTExMjAzMw==\">https://download.csdn.net/download/qq_41233643/11112033</span></p>\n",
            "tags": [
                "python"
            ]
        }
    ]
}