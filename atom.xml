<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sjxwjk.github.io</id>
    <title>苜蓿·莱</title>
    <link href="https://sjxwjk.github.io" />
    <updated>2022-04-18T02:49:03.359Z</updated>
    <category term="citespace" />
    <category term="搭建博客相关" />
    <category term="LeetCode" />
    <category term="面试" />
    <category term="程序设计语言" />
    <category term="常用" />
    <category term="python" />
    <category term="八阿哥" />
    <category term="测试" />
    <entry>
        <id>https://sjxwjk.github.io/2022/04/18/%E9%93%BE%E8%A1%A8%E7%B1%BB%E5%88%B7%E9%A2%98day3/</id>
        <title>链表类刷题day3</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/04/18/%E9%93%BE%E8%A1%A8%E7%B1%BB%E5%88%B7%E9%A2%98day3/"/>
        <content type="html">&lt;p&gt;努力刷题 day3&lt;br&gt;
1.LeetCode 203. 移除链表元素 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcmVtb3ZlLWxpbmtlZC1saXN0LWVsZW1lbnRzLw==&#34;&gt;传送门&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public ListNode removeElements(ListNode head, int val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //删除值相同的头结点后，可能新的头结点也值相等，用循环解决&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(head!=null&amp;amp;&amp;amp;head.val==val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            head=head.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if(head==null)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ListNode prev=head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        //确保当前结点后还有结点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while(prev.next!=null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if(prev.next.val==val)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                prev.next=prev.next.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                prev=prev.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="LeetCode" />
        <updated>2022-04-18T02:49:03.359Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/04/12/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</id>
        <title>笔试面试总结</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/04/12/%E7%AC%94%E8%AF%95%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
        <content type="html">&lt;p&gt;找到工作了，一直想写一份面经汇总，奈何拖延症晚期，先开个坑，早晚得填！！！&lt;/p&gt;
</content>
        <category term="面试" />
        <updated>2022-04-12T03:26:25.625Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/04/12/%E6%95%B0%E7%BB%84%E7%B1%BB%E5%88%B7%E9%A2%98day2/</id>
        <title>数组类刷题day2</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/04/12/%E6%95%B0%E7%BB%84%E7%B1%BB%E5%88%B7%E9%A2%98day2/"/>
        <content type="html">&lt;p&gt;努力刷题 day2&lt;/p&gt;
&lt;p&gt;1.LeetCode 977. 有序数组的平方 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvc3F1YXJlcy1vZi1hLXNvcnRlZC1hcnJheS8=&#34;&gt;传送门&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public int[] sortedSquares(int[] nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for(int i=0;i&amp;lt;nums.length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nums[i]=nums[i]*nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Arrays.sort(nums);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return nums;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.LeetCode 209. 长度最小的子数组&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbWluaW11bS1zaXplLXN1YmFycmF5LXN1bS8=&#34;&gt;传送门&lt;/span&gt;&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public int minSubArrayLen(int s, int[] nums) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int n = nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (n == 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int ans = Integer.MAX_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (int i = 0; i &amp;lt; n; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int sum = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for (int j = i; j &amp;lt; n; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sum += nums[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if (sum &amp;gt;= s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    ans = Math.min(ans, j - i + 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return ans == Integer.MAX_VALUE ? 0 : ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;details class=&#34;primary&#34;&gt;&lt;summary&gt;今日份总结&lt;/summary&gt;&lt;div&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;（1） Arrays.sort () 使用方法：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzYzMjI1L2FydGljbGUvZGV0YWlscy84Mjg5MDEyMi8=&#34;&gt;传送门 - 转载 - 侵删致谢&lt;/span&gt;&lt;br&gt;
（2）Integer.MAX_VALUE 的含义：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDgyNDUwMC9hcnRpY2xlL2RldGFpbHMvMTA0NzY4Mjkw&#34;&gt;传送门 - 转载 - 侵删致谢&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/details&gt;
</content>
        <category term="LeetCode" />
        <updated>2022-04-12T02:58:48.486Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/04/11/%E6%95%B0%E7%BB%84%E7%B1%BB%E5%88%B7%E9%A2%98day1/</id>
        <title>数组类刷题day1</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/04/11/%E6%95%B0%E7%BB%84%E7%B1%BB%E5%88%B7%E9%A2%98day1/"/>
        <content type="html">&lt;p&gt;努力刷题 day1&lt;/p&gt;
&lt;p&gt;1.LeetCode 704. 二分查找【&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvYmluYXJ5LXNlYXJjaC8=&#34;&gt;传送门&lt;/span&gt;】&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public int search(int[] nums, int target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 避免当 target 小于nums[0] nums[nums.length - 1]时多次循环运算&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        if (target &amp;lt; nums[0] || target &amp;gt; nums[nums.length - 1]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int left = 0, right = nums.length - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        while (left &amp;lt;= right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            int mid = left + ((right - left) &amp;gt;&amp;gt; 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (nums[mid] == target)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                return mid;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else if (nums[mid] &amp;lt; target)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                left = mid + 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            else if (nums[mid] &amp;gt; target)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                right = mid - 1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return -1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;1.LeetCode 27. 移除元素【&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcmVtb3ZlLWVsZW1lbnQv&#34;&gt;传送门&lt;/span&gt;】&lt;/p&gt;
&lt;div class=&#34;note default&#34;&gt;
&lt;p&gt;code&lt;/p&gt;
&lt;/div&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public int removeElement(int[] nums, int val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        // 快慢指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int fastIndex = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        int slowIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        for (slowIndex = 0; fastIndex &amp;lt; nums.length; fastIndex++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if (nums[fastIndex] != val) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                nums[slowIndex] = nums[fastIndex];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                slowIndex++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        return slowIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <category term="LeetCode" />
        <updated>2022-04-11T06:28:11.197Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/17/bug/%E7%A8%8B%E5%BA%8Fbug/bug1/</id>
        <title>eclipse 点击new菜单后没有新建java project的解决方案</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/17/bug/%E7%A8%8B%E5%BA%8Fbug/bug1/"/>
        <content type="html">&lt;p&gt;本文从 CSDN 迁移到此，写于 2021 年 04 月 20 日，所以也许存在因时间久远而出现一些问题。&lt;br&gt;
「侵删致谢」&lt;br&gt;
运行 github 上的大佬的代码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1l1bllhbmcxOTk0L3RlbnNvcmZsb3cteW9sb3YzJUVGJUJDJThDJUU1JTlDJUE4JUU4JUJGJTlCJUU4JUExJThDcHl0aG9u&#34;&gt;https://github.com/YunYang1994/tensorflow-yolov3，在进行 python&lt;/span&gt; train.py 的时候：ValueError: not enough values to unpack (expected 3, got 0),github 中部分解决方法 https://github.com/YunYang1994/tensorflow-yolov3/issues/396，但尝试后都没有成功运行，后来发现只是因为路径包含中文。&lt;/p&gt;
</content>
        <category term="八阿哥" />
        <updated>2022-01-17T10:33:18.666Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/12/test/%E6%96%B9%E6%B3%95/%E7%BC%96%E5%86%99%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
        <title>编写测试用例 （持续更新</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/12/test/%E6%96%B9%E6%B3%95/%E7%BC%96%E5%86%99%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;编写测试用例的基本方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编写测试用例的基本方法&#34;&gt;#&lt;/a&gt; 编写测试用例的基本方法&lt;/h1&gt;
&lt;h2 id=&#34;等价类划分法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#等价类划分法&#34;&gt;#&lt;/a&gt; 等价类划分法：&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;1.定义：等价类划分是指分步骤的把海量的测试用例集剪的很小；
2.等价类：某个输入域的集合，在每个集合中每个输入条件都是有效的。
3.多用于输入框
4.有效等价类和无效等价类
    有效等价类：指符合需求规格说明书，输入合理的数据集合
    无效等价类：指不符合需求规格说明书，输入不合理的数据集合
5.例题：如计算两个1-100之间整数的和。
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;边界值测定法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#边界值测定法&#34;&gt;#&lt;/a&gt; 边界值测定法&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;1.选取正好等于，刚刚大于，刚刚小于边界值作为测试数据。
2.上点（有效）
3.离点（无效）
4.例题：1-100之间的证书中四种情况分别取上点和离点
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;因果图法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#因果图法&#34;&gt;#&lt;/a&gt; 因果图法&lt;/h2&gt;
&lt;h2 id=&#34;场景法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#场景法&#34;&gt;#&lt;/a&gt; 场景法&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;1.用例场景是通过描述流经用例的路径来确定的过程，这个流经过程要从用例开始到结束遍历其中所有基本流和备选流。
2.基本流
3.备选项
4.例题：银行ATM
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;正交表法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#正交表法&#34;&gt;#&lt;/a&gt; 正交表法&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;1.正交排列法能够使用最小的测试过程集合获得最大的测试覆盖率。当可能的输入数据或者输入数据的组合数量很大时，由于不可能为每个输入组合都创建测试用例，可以采用这种方法。
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="测试" />
        <updated>2022-01-12T01:19:05.205Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/12/test/%E7%8E%AF%E5%A2%83/%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
        <title>搭建测试环境（持续更新</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/12/test/%E7%8E%AF%E5%A2%83/%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
        <content type="html">&lt;h1 id=&#34;测试环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测试环境&#34;&gt;#&lt;/a&gt; 测试环境&lt;/h1&gt;
&lt;h2 id=&#34;定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定义&#34;&gt;#&lt;/a&gt; 定义：&lt;/h2&gt;
&lt;p&gt;测试环境是指为了完成软件测试工作所必需的计算机硬件 / 软件 / 网络设备 / 历史数据的总称。即完整的测试环境 = 硬件 + 软件 + 网络 + 数据 + 测试工具&lt;/p&gt;
&lt;h2 id=&#34;硬件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬件&#34;&gt;#&lt;/a&gt; 硬件：&lt;/h2&gt;
&lt;p&gt;1. 硬件相关的测试就是计算机操作系统。如 winsows7，8，10/Linux centos7，centos，Ubuntu，Redhat，Debian/Mac OS&lt;br&gt;
2. 测试环境可以部署在任何一种操作系统上，根据被测软件的需求来决定。&lt;/p&gt;
&lt;h2 id=&#34;软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件&#34;&gt;#&lt;/a&gt; 软件：&lt;/h2&gt;
&lt;p&gt;1. 被测软件与其相关依赖和交互的软件。&lt;br&gt;
2. 依赖交互软件一般是指：JDK，tomcat，mysql，oracle 等。&lt;/p&gt;
&lt;h2 id=&#34;网络&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网络&#34;&gt;#&lt;/a&gt; 网络&lt;/h2&gt;
&lt;p&gt;1. 需要规划和配置 IP 地址，部署路由和 VLAN 等。实现网络隔离和通信。&lt;br&gt;
2. 了解 TCP，HTTP，UDP 等网络协议。&lt;br&gt;
3. 了解 Linux 基本网络配置&lt;br&gt;
系统的 IP 和路由配置&lt;br&gt;
调试网络通信问题等&lt;br&gt;
 Linux 系统命令抓包&lt;/p&gt;
&lt;h2 id=&#34;测试工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测试工具&#34;&gt;#&lt;/a&gt; 测试工具&lt;/h2&gt;
&lt;p&gt;1. 黑盒测试：会利用各种工具来代替手工；&lt;br&gt;
2. 压力，性能测试：同样需要借助测试工具模拟高并发，高吞吐，高持续的数据；&lt;br&gt;
3. 常用工具&lt;br&gt;
接口测试：postman，jmeter&lt;br&gt;
 自动化测试：selenium&lt;br&gt;
 抓包工具：fiddler，charles&lt;/p&gt;
&lt;h2 id=&#34;数据准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据准备&#34;&gt;#&lt;/a&gt; 数据准备&lt;/h2&gt;
&lt;p&gt;1. 一般指测试数据的准备&lt;/p&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h1&gt;
&lt;p&gt;面试官：所以 Linux 系统你是会用的对吧？具体操作步骤能简单描述一下么？你们一般会安装一些什么服务？&lt;br&gt;
面试官：你会自己独立搭建测试环境么？你以前公司测试需要自己搭建测试环境么？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201120952355.png&#34; alt&gt;&lt;/p&gt;
&lt;h1 id=&#34;搭建测试环境步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#搭建测试环境步骤&#34;&gt;#&lt;/a&gt; 搭建测试环境步骤&lt;/h1&gt;
</content>
        <category term="测试" />
        <updated>2022-01-12T01:18:46.947Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/11/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</id>
        <title>Mac系统利用阿里云OSS+Mweb+Picgo为基于Hexo的博客搭建图床</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/11/%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
        <content type="html">&lt;pre&gt;&lt;code&gt;                「侵删致谢」
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;最近搭建好 Hexo 博客，昨天开始迁移博客的时候，思考图片存储问题。于是，开始搜索，看到大家都是用一个云 + Picgo+Typora 搭建了一个图床。前几天在找 Markdown 编辑器的时候，最初的想法也是用 Typora，但是奈何官网进不去，遂转入 MWeb。&lt;/p&gt;
&lt;h1 id=&#34;准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备工作&#34;&gt;#&lt;/a&gt; 准备工作&lt;/h1&gt;
&lt;h2 id=&#34;阿里云oss&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#阿里云oss&#34;&gt;#&lt;/a&gt; 阿里云 OSS&lt;/h2&gt;
&lt;p&gt;1. 链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9wcm9kdWN0L29zcw==&#34;&gt;https://www.aliyun.com/product/oss&lt;/span&gt;&lt;br&gt;
2. 开通：一年 9 块钱&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111410220.png&#34; alt&gt;&lt;br&gt;
 3. 创建 Bucket 列表&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111414857.png&#34; alt&gt;&lt;br&gt;
 4. 生成 Access Key 和 AccessKey Secret&lt;br&gt;
（在下图右下角常见入口，左侧第二个）&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111415577.png&#34; alt&gt;&lt;/p&gt;
&lt;h2 id=&#34;picgo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#picgo&#34;&gt;#&lt;/a&gt; Picgo&lt;/h2&gt;
&lt;p&gt;1. 下载：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL01vbHVuZXJmaW5uL1BpY0dvL3JlbGVhc2Vz&#34;&gt;https://github.com/Molunerfinn/PicGo/releases&lt;/span&gt;&lt;br&gt;
 按照作者的教程来就行，需要注意的就是 Mac 会提示风险 app，在安全里允许一下就好了&lt;br&gt;
 2. 配置：如图&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111444858.png&#34; alt&gt;&lt;br&gt;
值得说的是，我在上传图片的时候报 403，说说解决办法，首先在 PicGO 设置里看起服务，确保自己配置信息没有写错。&lt;br&gt;
上传失败一定在 PicGo 中看看日志文件。&lt;/p&gt;
&lt;h2 id=&#34;mweb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mweb&#34;&gt;#&lt;/a&gt; Mweb&lt;/h2&gt;
&lt;p&gt;1. 下载：APP Store&lt;br&gt;
2. 配置&lt;br&gt;
 (1) 在这里选择偏好设置 —&amp;gt;&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111425766.png&#34; alt&gt;&lt;br&gt;
(2) 按照下图点击 —&amp;gt;&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111431149.png&#34; alt&gt;&lt;br&gt;
(3) 填写配置信息&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111435044.png&#34; alt&gt;&lt;br&gt;
（4）填写好后点击确定，发布服务。&lt;/p&gt;
&lt;h1 id=&#34;使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用&#34;&gt;#&lt;/a&gt; 使用&lt;/h1&gt;
&lt;p&gt;上述完成后就可以使用了，有图片就上传到 PicGo，然后复制图片代码，在写博客的时候粘贴即可。&lt;/p&gt;
</content>
        <category term="搭建博客相关" />
        <updated>2022-01-11T05:57:33.962Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/</id>
        <title>24点游戏（自动生成随机数）</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/11/school/24%E7%82%B9/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;常见游戏规则：&lt;br&gt;
从扑克中每次取出 4 张牌。使用加减乘除，第一个能得出 24 者为赢。（其中，J 代表 &amp;gt; 11，Q 代表 12，K 代表 13，A 代表 1），按照要求编程解决 24 点游戏。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随机产生四个数字用 python 中的函数进行全排列&lt;br&gt;
随机数的生成：&lt;br&gt;
对于 python 随机数的生成，通过导入包来实现，即 import  random&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222143990.png&#34; alt&gt;&lt;br&gt;
 本程序中因为要生成 4 个（1——13）的整形数字，采用 randint&lt;br&gt;
 对四个随机数的全排列：&lt;br&gt;
对于 python 可以通过 python 的包 itertools 所以不用自己写递归函数实现&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;通俗地讲，就是返回可迭代对象的所有数学全排列方式。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```listCardSet = list(set(itertools.permutations(listCardNum, 4)))#全排列4个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return  listCardSet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;例如：8,13,3,5 产生的全排列&lt;/p&gt;
&lt;p&gt;(8, 13, 3, 5), (13, 5, 8, 3), (5, 3, 8, 13), (13, 3, 8, 5), (3, 5, 8, 13), (3, 13, 5, 8),&lt;/p&gt;
&lt;p&gt;(3, 5, 13, 8), (5, 3, 13, 8), (8, 13, 5, 3), (8, 5, 13, 3), (8, 3, 5, 13), (5, 8, 3, 13),&lt;/p&gt;
&lt;p&gt;(13, 8, 3, 5), (13, 3, 5, 8), (8, 3, 13, 5), (5, 8, 13, 3), (3, 8, 13, 5), (5, 13, 3, 8),&lt;/p&gt;
&lt;p&gt;(13, 8, 5, 3), (5, 13, 8, 3), (8, 5, 3, 13), (3, 13, 8, 5), (3, 8, 5, 13), (13, 5, 3, 8)&lt;/p&gt;
&lt;p&gt;显示：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;__name__ &lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;************************欢迎进入24点游戏************************&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;print(&amp;quot;该系统会随机产生四张牌，并帮助您算出可以实现24点的所有算法&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202202222146226.png&#34; alt&gt;&lt;br&gt;
代码分析：&lt;br&gt;
I. 需要的包：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;itertools&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;import random&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;II. 随机产生数字和全排列：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;card_rand():&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(4):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list_random.append(random.randint(1, 13))                    #list.append(obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list_quanpai = list(set(itertools.permutations(list_random, 4)))#全排列4个数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return  list_quanpai&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listCard = card_rand()  # 排列组合结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#print(listCard)#输出所有排列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```III. 计算函数：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```def card_calculate():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    for i in range(len(listCard)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        list1_Card = listCard[i]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardOne = list1_Card[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardTwo = list1_Card[1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardThree = list1_Card[2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cardFour = list1_Card[3]  # 得到四张牌的点数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        flag = False  # 标志位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        try:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            for o1 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultOne = 0  # 前两个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                if o1 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne+cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne-cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne*cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                elif o1 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultOne = cardOne/cardTwo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                for o2 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultTwo = 0  # 前三个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    if o2 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne + cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne - cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne * cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    elif o2 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultTwo = resultOne / cardThree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    for o3 in listOperator:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultThree = 0  # 四个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        resultFinal = 0  # 最后两个数的运算结果&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        if o3 == &amp;quot;+&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo + cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree + cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;-&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo - cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree - cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;*&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo * cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree * cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        elif o3 == &amp;quot;/&amp;quot;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultThree = resultTwo / cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            resultFinal = cardThree / cardFour&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;源码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb3dubG9hZC5jc2RuLm5ldC9kb3dubG9hZC9xcV80MTIzMzY0My8xMTExMjAzMw==&#34;&gt;https://download.csdn.net/download/qq_41233643/11112033&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="python" />
        <updated>2022-01-11T05:57:33.962Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/10/daily/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99/</id>
        <title>一些常用的优秀网站和软件</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/10/daily/%E5%B8%B8%E7%94%A8%E7%BD%91%E7%AB%99/"/>
        <content type="html">&lt;p&gt;本文从 CSDN 迁移到此，写于 2019 年 06 月 26 日，所以也许存在因时间久远而出现一些问题。&lt;br&gt;
「侵删致谢」&lt;/p&gt;
&lt;p&gt;1. 可以生成比较好看的代码截图：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jYXJib24ubm93LnNo&#34;&gt;https://carbon.now.sh&lt;/span&gt;&lt;br&gt;
2. 可以在 Word 中粘贴出比较整齐的代码：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5wbGFuZXRiLmNhL3N5bnRheC1oaWdobGlnaHQtd29yZA==&#34;&gt;http://www.planetb.ca/syntax-highlight-word&lt;/span&gt;&lt;br&gt;
 或者用 Notepad++&lt;/p&gt;
&lt;p&gt;![&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201111346114.png&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;刚从 Windows 转入 mac，mac 系统可以用：Sublime Text&lt;/p&gt;
&lt;p&gt;3. 文件格式转换的网站：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saWdodHBkZi5jb20=&#34;&gt;https://lightpdf.com&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;4. 甘特图：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9nYW50dC5taW5kc3VwLmNvbS5jbi8=&#34;&gt;https://gantt.mindsup.com.cn/&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="常用" />
        <updated>2022-01-10T12:00:13.230Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/10/Citespace%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E7%BB%8F%E9%AA%8C%EF%BC%88%E6%B1%87%E6%80%BB%EF%BC%89/</id>
        <title>Citespace使用方法/经验（汇总）</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/10/Citespace%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E7%BB%8F%E9%AA%8C%EF%BC%88%E6%B1%87%E6%80%BB%EF%BC%89/"/>
        <content type="html">&lt;p&gt;本文从 CSDN 迁移到此，写于 2019 年 10 月 28 日，所以也许存在因时间久远而出现一些问题。&lt;br&gt;
「侵删致谢」&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;citespace 初学者使用：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZW5rdS5iYWlkdS5jb20vdmlldy80ZGEzZmQxYTYyOTRkZDg4ZDFkMjZiNjQuaHRtbCUyMCUyMCUyMCUyMCUyMA==&#34;&gt;https://wenku.baidu.com/view/4da3fd1a6294dd88d1d26b64.html     &lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC80OWQ0MWQwY2NkN2ZodHRwczovL3d3dy5qaWFuc2h1LmNvbS9wLzQ5ZDQxZDBjY2Q3ZiUyMCUyMCUyMCUyMA==&#34;&gt;https://www.jianshu.com/p/49d41d0ccd7fhttps://www.jianshu.com/p/49d41d0ccd7f    &lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有一个公众号 “学术点滴”，感谢大佬&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解决关键词聚类标签显示省略号问题：&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Jsb2cuc2NpZW5jZW5ldC5jbi9ibG9nLTMxOTU1NDAtMTA1MzUxNS5odG1s&#34;&gt;http://blog.sciencenet.cn/blog-3195540-1053515.html&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="citespace" />
        <updated>2022-01-10T10:19:27.158Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/10/%E9%9D%A2%E8%AF%95/%E9%95%BF%E6%98%A5%E5%BE%84%E7%82%B9%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%20%E9%9D%A2%E8%AF%95%EF%BC%882022.1.24%EF%BC%89%20/</id>
        <title>长春径点科技有限公司 面试</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/10/%E9%9D%A2%E8%AF%95/%E9%95%BF%E6%98%A5%E5%BE%84%E7%82%B9%E7%A7%91%E6%8A%80%E6%9C%89%E9%99%90%E5%85%AC%E5%8F%B8-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%20%E9%9D%A2%E8%AF%95%EF%BC%882022.1.24%EF%BC%89%20/"/>
        <content type="html">&lt;h2 id=&#34;长春径点科技有限公司-软件测试-面试2022124&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#长春径点科技有限公司-软件测试-面试2022124&#34;&gt;#&lt;/a&gt; 长春径点科技有限公司 - 软件测试 面试（2022.1.24）&lt;/h2&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;第一次正式面试，我很蠢。&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&#34;问题总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题总结&#34;&gt;#&lt;/a&gt; 问题总结&lt;/h3&gt;
&lt;p&gt;1. 你先进行一下自我介绍吧！&lt;/p&gt;
&lt;p&gt;2. 你理解 ip 么？&lt;/p&gt;
&lt;p&gt;3. 你用过微信传输助手吗？如果你进行测试测试点怎么考虑？&lt;/p&gt;
&lt;p&gt;4. 你了解虚拟机吗？&lt;/p&gt;
&lt;p&gt;5. 用过 sql server 么？还记得查询语句么？&lt;/p&gt;
&lt;p&gt;6. 你理解测试流程么？你对迭代测试的理解？集成测试的理解？&lt;/p&gt;
&lt;p&gt;7. 你自学过什么技术么？&lt;/p&gt;
&lt;p&gt;8. 你之前做过前端岗位，为什么想做测试？&lt;/p&gt;
&lt;p&gt;9. 薪资问题。&lt;/p&gt;
</content>
        <category term="面试" />
        <updated>2022-01-10T10:19:27.158Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/10/test/%E5%B7%A5%E5%85%B7/Jmeter/</id>
        <title>jmeter （持续更新</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/10/test/%E5%B7%A5%E5%85%B7/Jmeter/"/>
        <content type="html">&lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;1.JMeter 是一款由 Apache 开发的 Java 开源工具，作为软件测试重要的工具之一，可用于性能负载测试，通过创建带有断言的脚本来验证程序是否能返回期望的结果。旨在分析和衡量 Web 应用程序和各种服务的性能和负载功能行为。&lt;br&gt;
2. 优缺点&lt;br&gt;
优点：开源，免费，跨平台，支持多协议，小巧，功能强大。&lt;br&gt;
缺点：不支持 IP 欺骗，无法验证 JS 程序，无法验证页面 UI，要         和 Selenium 配合完成 web2.0 的测试。&lt;br&gt;
3. 安装流程&lt;br&gt;
（1）需要安装 Java 环境&lt;br&gt;
（2）下载安装&lt;br&gt;
（3）启动&lt;br&gt;
 4. 项目简介&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/iShot2022-01-10%2014.07.40.png&#34; alt=&#34;iShot2022-01-10 14.07.40&#34;&gt;&lt;br&gt;
 需要 API 接口文档&lt;/p&gt;
&lt;p&gt;5. 线程组的设置&lt;br&gt;
（1）需求：发射一个 HTTP 请求，访问地址，获取所有信息：&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418009256482.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;media/16417768971930/16418009676560.jpg&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418010736810.jpg&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418011027367.jpg&#34; alt&gt;&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418011327056.jpg&#34; alt&gt;&lt;br&gt;
（2）线程组相关：&lt;br&gt;
进程：正在运行的程序&lt;br&gt;
线程：是进程中的执行线索&lt;br&gt;
线程组：进程中许多线程，为了方便管理，进行分组，得到线程组。&lt;/p&gt;
&lt;p&gt;（3）并发执行和顺序执行&lt;br&gt;
并发：多个线程同时执行&lt;br&gt;
顺序：多个线程顺序执行&lt;/p&gt;
&lt;p&gt;（4）两个特殊的线程组&lt;br&gt;
 setUP 线程组：最优先执行的线程组&lt;br&gt;
 tearDown 线程组：最后执行的线程组&lt;/p&gt;
&lt;p&gt;（5）线程属性&lt;br&gt;
线程数：模拟用户数&lt;br&gt;
 Ramp- UP 时间（秒）：&lt;br&gt;
循环次数：执行次数&lt;br&gt;
调度器：持续时间和启动延迟&lt;br&gt;
（6）http 请求默认值：被复用的内容封装&lt;br&gt;
（7）信息头管理器&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418088544451.jpg&#34; alt&gt;&lt;br&gt;
 6. 参数化的使用&lt;br&gt;
（1）定义 动态的获取，设置或生成数据，是一种由程序驱动代替人工驱动的数据方案，提高脚本的编写效率以及编写质量。&lt;br&gt;
（2）实现参数化的方式&lt;br&gt;
用户定义的变量&lt;br&gt;
 CSV 数据文件设置&lt;br&gt;
用户参数&lt;br&gt;
函数&lt;br&gt;
（3）参数化–用户定义的变量&lt;br&gt;
调用格式：${变量名}&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418092029081.jpg&#34; alt&gt;&lt;br&gt;
（4）参数化 -- CSV 数据文件设置&lt;br&gt;
 CSV：逗号分隔值，是一种简洁且常见的数据存储格式&lt;br&gt;
实现步骤：&lt;br&gt;
使用 CSV 文件存储测试数据&lt;br&gt;
编写被服用的新增脚本模板&lt;br&gt;
关联脚本与数据&lt;br&gt;
&lt;img data-src=&#34;media/16417768971930/16418095840317.jpg&#34; alt&gt;&lt;/p&gt;
&lt;p&gt;7. 直链数据库操作&lt;br&gt;
 8. 断言&lt;/p&gt;
</content>
        <category term="测试" />
        <updated>2022-01-10T01:08:17.194Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/09/%E7%BD%AE%E9%A1%B6%E5%86%85%E5%AE%B9/</id>
        <title>公告</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/09/%E7%BD%AE%E9%A1%B6%E5%86%85%E5%AE%B9/"/>
        <content type="html">&lt;p&gt;我要努力迁移了！！！&lt;br&gt;
本博客部分内容迁移自 CSDN 博客内容，迁移博客均已标注。&lt;br&gt;
故，可能有时间问题导致博客内容失效。&lt;/p&gt;
</content>
        <updated>2022-01-09T12:02:30.033Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/09/C++/title:C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
        <title>C++学习笔记</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/09/C++/title:C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
        <content type="html">&lt;p&gt;&lt;strong&gt;&lt;u&gt;day 1&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;计算机语言的分类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算机语言的分类&#34;&gt;#&lt;/a&gt; 计算机语言的分类&lt;/h1&gt;
&lt;h2 id=&#34;两种翻译&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#两种翻译&#34;&gt;#&lt;/a&gt; 两种 “翻译”&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;编译型语言：&lt;br&gt;
一次性将整个程序 “翻译” 成机器语言的指令，保存成文件，以后执行不需要再 “翻译”，只需执行翻译过的文件。&lt;br&gt;
如：C，C++，Fortran，Pascal&lt;/li&gt;
&lt;li&gt;解释型语言：&lt;br&gt;
翻译一句执行一句，直到结束或遇到错误。&lt;br&gt;
如：Python，JAVA，PHP，Basic，ASP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编译型语言过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编译型语言过程&#34;&gt;#&lt;/a&gt; 编译型语言过程&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201221207861.jpeg&#34; alt&gt;&lt;/p&gt;
&lt;h1 id=&#34;c的程序结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#c的程序结构&#34;&gt;#&lt;/a&gt; C++ 的程序结构&lt;/h1&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt; // 编译预处理 包含基本输入输出库头文件 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std; // 使用标准库名字空间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main() /* 主函数 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot;Hello World&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot;Hello C++&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;实例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实例&#34;&gt;#&lt;/a&gt; 实例&lt;/h2&gt;
&lt;h3 id=&#34;输入输出字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#输入输出字符串&#34;&gt;#&lt;/a&gt; 输入输出字符串&lt;/h3&gt;
&lt;h4 id=&#34;生日贺卡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#生日贺卡&#34;&gt;#&lt;/a&gt; 生日贺卡&lt;/h4&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	char name1[50],name2[50];//用符号表示字符串（str表示长度不超过50）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cin.getline(name1,50);//输入一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cin.getline(name2,50);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot;######################################&amp;quot;&amp;lt;&amp;lt;endl; //显示字符串常量&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;name1&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot;Happy birthday to you!&amp;quot;&amp;lt;&amp;lt;endl;//输出&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot; sincerely yours &amp;quot;&amp;lt;&amp;lt;name2&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cout&amp;lt;&amp;lt;&amp;quot;######################################&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;⚠️&lt;br&gt;
显示字符串常量：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;&amp;quot;*******&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
用符号表示字符串：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;char str[50];//str可以表示长度不超过50的一串字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
输入字符串：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin.getline(str,50);//输入一行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
输出字符串：&lt;br&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;str;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;变量声明和四则运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量声明和四则运算&#34;&gt;#&lt;/a&gt; 变量声明和四则运算&lt;/h3&gt;
&lt;h4 id=&#34;加法计算器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加法计算器&#34;&gt;#&lt;/a&gt; 加法计算器&lt;/h4&gt;
&lt;p&gt;编程计算两个整数的和。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int a,b,c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c=a+b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;c&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;⚠️&lt;br&gt;
变量的声明：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;int a,b,c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;duble da,db,dc;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入 cin：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;a;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;b;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运算：&lt;br&gt;
+，-，*，/，&amp;amp;&lt;/p&gt;
&lt;h3 id=&#34;数学函数和while循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数学函数和while循环&#34;&gt;#&lt;/a&gt; 数学函数和 while 循环&lt;/h3&gt;
&lt;h4 id=&#34;计算存款本息&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算存款本息&#34;&gt;#&lt;/a&gt; 计算存款本息&lt;/h4&gt;
&lt;p&gt;编写程序，计算银行存款本息。用户输入存款金额 money , 存款期 years 和年利率 rate ，根据公&lt;br&gt;
&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201221228202.png&#34; alt&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#include&amp;lt;cmath&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;using namespace std;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;double money,years,rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;&amp;quot;请输入本金money，存款年years，利率rate，用空格隔开&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;money&amp;gt;&amp;gt;years&amp;gt;&amp;gt;rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;while(money&amp;gt;0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sum=money*pow((1+rate),years);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;sum&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cout&amp;lt;&amp;lt;&amp;quot;请输入本金money，存款年years，利率rate，用空格隔开&amp;quot;&amp;lt;&amp;lt;endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cin&amp;gt;&amp;gt;money&amp;gt;&amp;gt;years&amp;gt;&amp;gt;rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;return 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;⚠️&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;数学函数的使用：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#include&lt;cmath&gt;&lt;/cmath&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;乘方：pow（x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;正弦：sin(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;余弦：cos(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;正切：tan(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;![](https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201221236650.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;循环：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;while()&lt;br&gt;
{}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### C++程序的基本要素
标识符，关键字，自定义标识符；
变量和常量；
运算符和表达式；
输入和输出；
函数；（main,系统函数，自定义函数）

### 讨论
（1）编译型语言执行效率高于解释型语言；
（2）main函数需要保持唯一性；
（3）cin.getline()按行输入，以回车为输入的分界符，cin按词输入，以空格回车tab作为分界符。

### 例题
（1）
![](https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201221251735.png)
（2）

&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="程序设计语言" />
        <updated>2022-01-09T12:02:30.033Z</updated>
    </entry>
    <entry>
        <id>https://sjxwjk.github.io/2022/01/09/bug/%E5%B7%A5%E5%85%B7bug/bug2/</id>
        <title>pip安装更新相关问题</title>
        <link rel="alternate" href="https://sjxwjk.github.io/2022/01/09/bug/%E5%B7%A5%E5%85%B7bug/bug2/"/>
        <content type="html">&lt;p&gt;本文从 CSDN 迁移到此，写于 2021 年 02 月 01 日，所以也许存在因时间久远而出现一些问题。&lt;br&gt;
「侵删致谢」&lt;/p&gt;
&lt;h1 id=&#34;pip-问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pip-问题&#34;&gt;#&lt;/a&gt; pip 问题&lt;/h1&gt;
&lt;p&gt;安装或更新都会出现一下问题：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Exception:&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决办法就是找个镜像：推荐（XXX 是需要安装的）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;install XXX -i&lt;/span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3B5cGkuZG91YmFuLmNvbS9zaW1wbGU=&#34;&gt;--trusted-host pypi.douban.com&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 使用oenpyxl的问题&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1、如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```TypeError: got invalid input value of type &amp;lt;class &amp;#x27;xml.etree.ElementTree.Element&amp;#x27;&amp;gt;, expected string &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;openpyxl 版本问题，我把本身自带的版本 3.0.2 卸载，安装了 3.0.0 后就不再出现次错误。&lt;/p&gt;
&lt;p&gt;安装 3.0.0&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;figcaption&gt;&lt;span&gt;install openpyxl&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;```&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;![](https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191016019.png)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;卸载3.0.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```pip uninstall openpyxl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://zzblogimages.oss-cn-beijing.aliyuncs.com/202201191017522.png&#34; alt&gt;&lt;br&gt;
补充：网上有教程是包冲突，我卸载了 lxml，还是会报错，不过大家可以尝试一下。&lt;/p&gt;
</content>
        <category term="八阿哥" />
        <updated>2022-01-09T12:02:30.033Z</updated>
    </entry>
</feed>
